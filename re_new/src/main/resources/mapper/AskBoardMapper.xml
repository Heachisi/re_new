<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AskBoardMapper"> <!-- 매퍼의 네임스페이스  설정 -->

	<select id="getBoardList" parameterType="model.board.AskBoard" resultType="model.board.AskBoard">
    SELECT * FROM (
        SELECT B.*, ROWNUM AS RN
        FROM (
            SELECT
                A.BOARD_ID,
                A.TITLE,
                A.CONTENT,
                A.VIEW_COUNT,
                A.CREATE_ID,
                A.UPDATE_ID,
                TO_CHAR(A.CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT,
                TO_CHAR(A.UPDATE_DT, 'YYYY-MM-DD') AS UPDATE_DT,
                A.DEL_YN
            FROM ASK_BOARD A
            WHERE A.DEL_YN = 'N'
            <if test="searchText != null and searchText != ''">
                AND (A.TITLE LIKE '%' || #{searchText} || '%' 
                     OR A.CONTENT LIKE '%' || #{searchText} || '%')
            </if>
            <if test="startDate != null and startDate !=''">
                <![CDATA[ AND A.CREATE_DT >= TO_DATE(#{startDate}, 'YYYY-MM-DD')]]>
            </if>
            <if test="endDate != null and endDate !=''">
                <![CDATA[ AND A.CREATE_DT <= TO_DATE(#{endDate}, 'YYYY-MM-DD')+1]]>
            </if>
            ORDER BY A.BOARD_ID DESC
        ) B
        WHERE ROWNUM &lt;= #{endRow}
    )
    WHERE RN >= #{startRow}
    <if test="boardId != null">
        AND BOARD_ID = #{boardId}
    </if>
</select>
    
    <select id="getTotalBoardCount" resultType="int">
    	SELECT COUNT(B.BOARD_ID)
    		FROM (
    			SELECT
    			A.BOARD_ID,
	            A.TITLE,
	            A.CONTENT,
	            A.VIEW_COUNT,
	            A.CREATE_ID,
	            A.UPDATE_ID,
	            TO_CHAR(A.CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT,
	            TO_CHAR(A.UPDATE_DT, 'YYYY-MM-DD') AS UPDATE_DT,
	            A.DEL_YN	
	        FROM ASK_BOARD A
    		<where>
    			AND A.DEL_YN ='N'
    			<if test="searchText != null and searchText !=''">
    			AND(
    				A.TITLE LIKE '%'||#{searchText}||'%'
    				OR A.CONTENT LIKE '%'||#{searchText}||'%'
    				)
    			</if>
    			<if test="startDate != null and startDate!=''">
    				<![CDATA[ AND A.CREATE_DT >= TO_DATE(#{startDate}, 'YYYY-MM-DD')]]>
             	</if>
             	<if test="endDate != null and endDate !=''">
               		<![CDATA[AND A.CREATE_DT <= TO_DATE(#{endDate},'YYYY-MM-DD')+1]]>
              	</if>
    		</where>
    	)B
    </select>
    
    <select id="getBoardById" parameterType="string" resultType="model.board.AskBoard">
      	SELECT 
            BOARD_ID,
            TITLE,
            CONTENT,
            VIEW_COUNT,
            CREATE_ID,
            UPDATE_ID,
            CREATE_DT,
            UPDATE_DT,
            DEL_YN	
        FROM ASK_BOARD
        WHERE BOARD_ID= #{boardId}
        	AND DEL_YN='N'
    </select>
	<insert id="create" parameterType="model.board.AskBoard">
        INSERT INTO ASK_BOARD (
         BOARD_ID,
         TITLE,
         CONTENT,
         VIEW_COUNT,
         CREATE_ID,
         CREATE_DT
         )
        VALUES (
        SEQ_ASK_BOARD.NEXTVAL,
        #{title},
        #{content},
        #{viewCount},
        #{createId},
        SYSDATE
        )
     <selectKey keyProperty="boardId" resultType="string" order="AFTER">
    	 SELECT SEQ_ASK_BOARD.CURRVAL FROM DUAL
     </selectKey>
    </insert>
    
   <update id="update" parameterType="model.board.AskBoard">
   		UPDATE ASK_BOARD
   		SET TITLE=#{title},
   			CONTENT=#{content},
   			VIEW_COUNT=#{viewCount},
   			UPDATE_ID = #{updateId},
   			UPDATE_DT = SYSDATE
	    WHERE BOARD_ID = #{boardId}
   </update>
    <update id="delete" parameterType="model.user.User">
        UPDATE ASK_BOARD 
        SET DEL_YN = 'Y',
            UPDATE_ID = #{updateId},
            UPDATE_DT = SYSDATE
        WHERE BOARD_ID = #{boardId}
    </update>
    
    
    <insert id="insertComment" parameterType="model.board.AskComment">
        INSERT INTO ASK_COMMENT (COMMENT_ID, BOARD_ID, PARENT_COMMENT_ID, CONTENT, CREATE_ID)
        VALUES (SEQ_COMMENT.NEXTVAL, #{boardId}, #{parentCommentId}, #{content}, #{createId})
    </insert>

    
    <select id="getCommentsByBoardId" parameterType="string" resultType="model.board.AskComment">
    SELECT 
        COMMENT_ID, 
        BOARD_ID, 
        PARENT_COMMENT_ID, 
        CONTENT, 
        CREATE_ID, 
        UPDATE_ID, 
        TO_CHAR(CREATE_DT, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DT, 
        TO_CHAR(UPDATE_DT, 'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DT, 
        DEL_YN
    FROM ASK_COMMENT
    WHERE BOARD_ID = #{boardId}
      AND DEL_YN = 'N'
    ORDER BY 
        NVL(PARENT_COMMENT_ID, COMMENT_ID), 
        NVL(CREATE_DT, TO_DATE('1900-01-01', 'YYYY-MM-DD')) ASC
</select>
   
    <select id="getCommentById" parameterType="int" resultType="model.board.AskComment">
        SELECT *
        FROM ASK_COMMENT
        WHERE COMMENT_ID = #{commentId}
          AND DEL_YN = 'N'
    </select>

    
    <update id="updateComment" parameterType="model.board.AskComment">
        UPDATE ASK_COMMENT
        SET CONTENT = #{content},
            UPDATE_ID = #{updateId},
            UPDATE_DT = SYSDATE
        WHERE COMMENT_ID = #{commentId}
    </update>

    
    <update id="deleteComment" parameterType="model.board.AskComment">
        UPDATE ASK_COMMENT
        SET DEL_YN = 'Y',
        	UPDATE_ID = #{updateId},
            UPDATE_DT = SYSDATE
        WHERE COMMENT_ID = #{commentId}
    </update>
    
    <update id="increaseViewCount" parameterType="string">
    UPDATE ASK_BOARD
    SET VIEW_COUNT = view_count+1
    WHERE board_id = #{boardId}
    </update>
</mapper>