<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardMapper">

	<select id="getBoardList" parameterType="model.board.Board" resultType="model.board.Board">
      	SELECT
      	 	B.RN,
            B.BOARD_ID,
            B.TITLE,
            B.CONTENT,
            B.VIEW_COUNT,
            B.CREATE_ID,
            B.UPDATE_ID,
            B.CREATE_DT,
            B.UPDATE_DT,
            B.DEL_YN	
      	FROM(
	      	SELECT
	      	 	ROWNUM AS RN,
	            A.BOARD_ID,
	            A.TITLE,
	            A.CONTENT,
	            A.VIEW_COUNT,
	            A.CREATE_ID,
	            A.UPDATE_ID,
	            TO_CHAR(A.CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT,
	            TO_CHAR(A.UPDATE_DT, 'YYYY-MM-DD') AS UPDATE_DT,
	            A.DEL_YN	
	        FROM BOARD A
	        WHERE A.DEL_YN='N'
	         <if test="searchKey != null and searchQuery != null">
            <choose>
                <when test="searchKey == 'title'">
                    AND A.TITLE LIKE ('%'|| #{searchQuery} || '%')
                </when>
                <when test="searchKey == 'writer'">
                    AND A.CREATE_ID LIKE ('%' || #{searchQuery} || '%')
                </when>
            </choose>
        </if>
        ) B
        WHERE B.RN BETWEEN #{startRow} AND #{endRow}
    </select>
    <select id="getTotalBoardCount" resultType="int">
    	SELECT COUNT(*)
    		FROM BOARD
    	WHERE DEL_YN='N'
    	<if test="searchKey != null and searchQuery != null">
        <choose>
            <when test="searchKey == 'title'">
                AND TITLE LIKE('%' || #{searchQuery} || '%')
            </when>
            <when test="searchKey == 'writer'">
                AND CREATE_ID LIKE('%' || #{searchQuery} || '%')
            </when>
        </choose>
    	</if>
    </select>
    
    <select id="getBoardById" parameterType="string" resultType="model.board.Board">
      	SELECT 
            BOARD_ID,
            TITLE,
            CONTENT,
            VIEW_COUNT,
            CREATE_ID,
            UPDATE_ID,
            CREATE_DT,
            UPDATE_DT,
            DEL_YN	
        FROM BOARD
        WHERE BOARD_ID= #{boardId}
        	AND DEL_YN='N'
    </select>
	<insert id="create" parameterType="model.board.Board">
        INSERT INTO BOARD (
         BOARD_ID,
         TITLE,
         CONTENT,
         VIEW_COUNT,
         CREATE_ID,
         CREATE_DT
         )
        VALUES (
        SEQ_BOARD.NEXTVAL,
        #{title},
        #{content},
        #{viewCount},
        #{createId},
        SYSDATE
        )
     <selectKey keyProperty="boardId" resultType="string" order="AFTER">
    	 SELECT SEQ_BOARD.CURRVAL FROM DUAL
     </selectKey>
    </insert>
    
   <update id="update" parameterType="model.board.Board">
   		UPDATE BOARD
   		SET TITLE=#{title},
   			CONTENT=#{content},
   			VIEW_COUNT=#{viewCount},
   			UPDATE_ID = #{updateId},
   			UPDATE_DT = SYSDATE
	    WHERE BOARD_ID = #{boardId}
   </update>
    <update id="delete" parameterType="model.user.User">
        UPDATE BOARD 
        SET DEL_YN = 'Y',
            UPDATE_ID = #{updateId},
            UPDATE_DT = SYSDATE
        WHERE BOARD_ID = #{boardId}
    </update>
    
    
    <insert id="insertComment" parameterType="model.board.Comment">
        INSERT INTO POST_COMMENT (COMMENT_ID, BOARD_ID, PARENT_COMMENT_ID, CONTENT, CREATE_ID)
        VALUES (SEQ_COMMENT.NEXTVAL, #{boardId}, #{parentCommentId}, #{content}, #{createId})
    </insert>

    
    <select id="getCommentsByBoardId" parameterType="string" resultType="model.board.Comment">
        SELECT 
        	COMMENT_ID, 
        	BOARD_ID, 
        	PARENT_COMMENT_ID, 
        	CONTENT, 
        	CREATE_ID, 
        	UPDATE_ID, 
        	TO_CHAR(CREATE_DT, 'YYYY-MM-DD')AS CREATE_DT, 
        	TO_CHAR(UPDATE_DT, 'YYYY-MM-DD')AS UPDATE_DT, 
        	DEL_YN
        FROM POST_COMMENT
        WHERE BOARD_ID = #{boardId}
          AND DEL_YN = 'N'
        ORDER BY PARENT_COMMENT_ID, CREATE_DT ASC
    </select>

   
    <select id="getCommentById" parameterType="int" resultType="model.board.Comment">
        SELECT *
        FROM POST_COMMENT
        WHERE COMMENT_ID = #{commentId}
          AND DEL_YN = 'N'
    </select>

    
    <update id="updateComment" parameterType="model.board.Comment">
        UPDATE POST_COMMENT
        SET CONTENT = #{content},
            UPDATE_ID = #{updateId},
            UPDATE_DT = SYSDATE
        WHERE COMMENT_ID = #{commentId}
    </update>

    
    <update id="deleteComment" parameterType="model.board.Comment">
        UPDATE POST_COMMENT
        SET DEL_YN = 'Y',
        	UPDATE_ID = #{updateId},
            UPDATE_DT = SYSDATE
        WHERE COMMENT_ID = #{commentId}
    </update>
</mapper>